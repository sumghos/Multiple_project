#Ubuntu Lamp server with Drupal
---
- hosts : localhost
  become : yes
# Define Variables in vars.yaml file
  vars_files :
    - vars.yaml
# defining pre_tasks need to executing before some task
# voice versa for post_task
  pre_tasks :
    - name : updating apt cache if needed
      apt : update_cache=yes cache_valid_time=3600
# handlers are the task , executed "notify" by other task
# can be invoked by --force-handlers in Ansible-playbook command though the
#"Notify" tasks fails
  handlers :
    - name : restrt apache
      service : name=apache2 state=restarted
# Started defining tasks here
  tasks:
    - name : Get software for apt repository management
      apt: name={{ item }} state=present
      with_items:
        - python-apt
        - python-pycurl
    - name : Add ondrej repository for later versions of PHP .
      apt_repository : repo='ppa:ondrej/php' update_cache=yes
    - name : "Install Apache , MySQL, PHP, and other dependencies ."
      apt: name={{ item }} state=present
      with_item :
        - git
        - curl
        - unzip
        - sendmail
        - apache2
        - php7.1-common
        - php7.1-cli
        - php7.1-dev
        - php7.1-gd
        - php7.1-curl
        - php7.1-json
        - php7.1-opcache
        - php7.1-xml
        - php7.1-mbstring
        - php7.1-pdo
        - php7.1-mysql
        - php-apcu
        - libpcre3-dev
        - libapache2-mod-php7.1
        - python-mysqldb
        - mysql-server
    - name : Ensure failwall is stopped (since this is for testing)
      service : name=ufw state=stopped
    - name : "Start Apache, MYSQL, and PHP"
      service : "name={{ item }} state=started enabled=yes"
        with_items :
          - apache2
          - mysql
#configure Apache
   - name : Enable Apacha Rewrite module (Required for Drupal)
     apache2_module: name=reweite state=present
     notify : restrt apache
   - name : Add apache virtual host for Drupal 8 Development .
     template :
       src : "templates/drupal.test.conf.j2"
       dest : "/etc/apache2/site-available/{{ domain }}.test.conf"
       owner : root
       group : root
       mode: 0644
     notify : restrt apache
   - name : Symlink Drupal virtualhost to Sites-enabled
     file:
       src : "/etc/apache2/sites-available/{{ domain }}.test.conf"
       dest : "/etc/apache2/sites-available/{{ domain }}.test.conf"
       state: link
       notify : restrt apache
   - name : Remove Default virtual file
     file :
       path : "/etc/apache2/site-enabled/000-default.conf"
       state: absent
     notify : restrt apache
#configure PHP with lineinfile

   - name :     Adjust OpCache Memory Setting .
     lineinfile :
       dest: "/etc/php/7.1/apache2/conf.d/10-opcache.ini"
       regxp: "opcache.memory_consumption = 96 "
       state: present
     notify : restrt apache

 #Configure MYSQL

    - name : Remove the MySQl test database
      mysql_db : db=test state=absent
    - name : Create a database for Drupal.
      mysql_db: "db={{ domain }} state=present"
    - name : Create a MySQL user for Drupal .
      mysql_user:
        name : "{{ domain }}"
        password: "1234"
        priv: "{{ domain }}.*:ALL"
        host: localhost
        state: present

# Install Composer a dependency of Drush
    - name : Download Composer installer
      git_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-installer.php
        mode: 0755
    - name : Run Composer Installer
      command: >
        php composer-installer.php
        chdir=/tmp
        creates=/usr/local/bin/composer

    - name : Move Composer into globally-accessible locations .
      shell: >
        mv /tmp/composer.phar /usr/local/bin/composer
        creates=/usr/local/bin/composer
# Install Drush from Github
    - name : check out drush 8.x branch
      git :
        repo : https://github.com/drush-ops/drush.git
        version : 8.x
        dest: /opt/drush
    - name : Install dependencies with composer .
      shell : >
        /user/local/bin/composer install
        chdir=/opt/drush
        creates=/opt/drush/vendon/autoload.php
    - name : Create drush bin Symlink
      file:
        src : /opt/drush/drush
        dest: /usr/local/bin/drush
        state: link
#install Drupal with Git and Drush
    - name : checkout Drupal Core to the Apache docroot
      git :
        repo : https://git.drupal.org/project/drupal.git
        version: "{{ drupal_core_version }}"
        dest : "{{ drupal_core_path }}"
    - name : Install Drupal dependencies with Composer .
      shell: >
        /usr/local/bin/composer install
        chdir={{ drupal_core_path }}
        creates={{ drupal_core_path }}/vendor/autoload.php
    - name : Install Drupal
      command: >
        drush si -y --site-name="{{ drupal-site-name }}"
        --account-name=admin
        --account-pass=admin
        --db_url=mysql://{{ domain }}:1234@localhost/{{ domain }}
        creates={{ drupal_core_path }}/sites/default/setting.php
      notify :  restrt apache
# SEE: https://drupal.org/node/2121849#comment-8413637
    - name : Set permission property on setting.php
      file:
        path: "{{ drupal_core_path }}/sites/default/setting.php"
        mode : 0744
    - name : Set permiision on files directory
      file :
        path: "{{ drupal_core_path }}/sites/default/files"
        mode : 0777
        state : directory
        recurse : yes


